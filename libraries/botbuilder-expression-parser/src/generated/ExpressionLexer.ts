// Generated from ../Expression.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ExpressionLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly NUMBER = 28;
	public static readonly WHITESPACE = 29;
	public static readonly IDENTIFIER = 30;
	public static readonly NEWLINE = 31;
	public static readonly STRING = 32;
	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "LETTER", "DIGIT", "NUMBER", "WHITESPACE", "IDENTIFIER", 
		"NEWLINE", "STRING",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'!'", "'-'", "'+'", "'^'", "'*'", "'/'", "'%'", "'=='", "'!='", 
		"'<>'", "'&'", "'<'", "'<='", "'>'", "'>='", "'&&'", "'||'", "'('", "')'", 
		"'#'", "'@'", "'@@'", "'$'", "'.'", "'['", "']'", "','",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		"NUMBER", "WHITESPACE", "IDENTIFIER", "NEWLINE", "STRING",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ExpressionLexer._LITERAL_NAMES, ExpressionLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ExpressionLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ExpressionLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Expression.g4"; }

	// @Override
	public get ruleNames(): string[] { return ExpressionLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ExpressionLexer._serializedATN; }

	// @Override
	public get modeNames(): string[] { return ExpressionLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\"\xBF\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
		"#\t#\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\t\x03\n\x03\n" +
		"\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E" +
		"\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12" +
		"\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16" +
		"\x03\x16\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A" +
		"\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E" +
		"\x03\x1F\x06\x1F\x8B\n\x1F\r\x1F\x0E\x1F\x8C\x03\x1F\x03\x1F\x06\x1F\x91" +
		"\n\x1F\r\x1F\x0E\x1F\x92\x05\x1F\x95\n\x1F\x03 \x03 \x03 \x03 \x03!\x03" +
		"!\x05!\x9D\n!\x03!\x03!\x03!\x07!\xA2\n!\f!\x0E!\xA5\v!\x03\"\x05\"\xA8" +
		"\n\"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x07#\xB0\n#\f#\x0E#\xB3\v#\x03" +
		"#\x03#\x03#\x07#\xB8\n#\f#\x0E#\xBB\v#\x03#\x05#\xBE\n#\x02\x02\x02$\x03" +
		"\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t" +
		"\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02" +
		"\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17" +
		"-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x02;\x02\x02" +
		"=\x02\x1E?\x02\x1FA\x02 C\x02!E\x02\"\x03\x02\b\x04\x02C\\c|\x03\x022" +
		";\x06\x02\v\v\"\"\xA2\xA2\uFF01\uFF01\x04\x02//aa\x03\x02))\x03\x02$$" +
		"\xC7\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02" +
		"\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02" +
		"\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02" +
		"\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02" +
		"\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02" +
		"\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'" +
		"\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02" +
		"\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02" +
		"\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03" +
		"\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02" +
		"\x02\x03G\x03\x02\x02\x02\x05I\x03\x02\x02\x02\x07K\x03\x02\x02\x02\t" +
		"M\x03\x02\x02\x02\vO\x03\x02\x02\x02\rQ\x03\x02\x02\x02\x0FS\x03\x02\x02" +
		"\x02\x11U\x03\x02\x02\x02\x13X\x03\x02\x02\x02\x15[\x03\x02\x02\x02\x17" +
		"^\x03\x02\x02\x02\x19`\x03\x02\x02\x02\x1Bb\x03\x02\x02\x02\x1De\x03\x02" +
		"\x02\x02\x1Fg\x03\x02\x02\x02!j\x03\x02\x02\x02#m\x03\x02\x02\x02%p\x03" +
		"\x02\x02\x02\'r\x03\x02\x02\x02)t\x03\x02\x02\x02+v\x03\x02\x02\x02-x" +
		"\x03\x02\x02\x02/{\x03\x02\x02\x021}\x03\x02\x02\x023\x7F\x03\x02\x02" +
		"\x025\x81\x03\x02\x02\x027\x83\x03\x02\x02\x029\x85\x03\x02\x02\x02;\x87" +
		"\x03\x02\x02\x02=\x8A\x03\x02\x02\x02?\x96\x03\x02\x02\x02A\x9C\x03\x02" +
		"\x02\x02C\xA7\x03\x02\x02\x02E\xBD\x03\x02\x02\x02GH\x07#\x02\x02H\x04" +
		"\x03\x02\x02\x02IJ\x07/\x02\x02J\x06\x03\x02\x02\x02KL\x07-\x02\x02L\b" +
		"\x03\x02\x02\x02MN\x07`\x02\x02N\n\x03\x02\x02\x02OP\x07,\x02\x02P\f\x03" +
		"\x02\x02\x02QR\x071\x02\x02R\x0E\x03\x02\x02\x02ST\x07\'\x02\x02T\x10" +
		"\x03\x02\x02\x02UV\x07?\x02\x02VW\x07?\x02\x02W\x12\x03\x02\x02\x02XY" +
		"\x07#\x02\x02YZ\x07?\x02\x02Z\x14\x03\x02\x02\x02[\\\x07>\x02\x02\\]\x07" +
		"@\x02\x02]\x16\x03\x02\x02\x02^_\x07(\x02\x02_\x18\x03\x02\x02\x02`a\x07" +
		">\x02\x02a\x1A\x03\x02\x02\x02bc\x07>\x02\x02cd\x07?\x02\x02d\x1C\x03" +
		"\x02\x02\x02ef\x07@\x02\x02f\x1E\x03\x02\x02\x02gh\x07@\x02\x02hi\x07" +
		"?\x02\x02i \x03\x02\x02\x02jk\x07(\x02\x02kl\x07(\x02\x02l\"\x03\x02\x02" +
		"\x02mn\x07~\x02\x02no\x07~\x02\x02o$\x03\x02\x02\x02pq\x07*\x02\x02q&" +
		"\x03\x02\x02\x02rs\x07+\x02\x02s(\x03\x02\x02\x02tu\x07%\x02\x02u*\x03" +
		"\x02\x02\x02vw\x07B\x02\x02w,\x03\x02\x02\x02xy\x07B\x02\x02yz\x07B\x02" +
		"\x02z.\x03\x02\x02\x02{|\x07&\x02\x02|0\x03\x02\x02\x02}~\x070\x02\x02" +
		"~2\x03\x02\x02\x02\x7F\x80\x07]\x02\x02\x804\x03\x02\x02\x02\x81\x82\x07" +
		"_\x02\x02\x826\x03\x02\x02\x02\x83\x84\x07.\x02\x02\x848\x03\x02\x02\x02" +
		"\x85\x86\t\x02\x02\x02\x86:\x03\x02\x02\x02\x87\x88\t\x03\x02\x02\x88" +
		"<\x03\x02\x02\x02\x89\x8B\x05;\x1E\x02\x8A\x89\x03\x02\x02\x02\x8B\x8C" +
		"\x03\x02\x02\x02\x8C\x8A\x03\x02\x02\x02\x8C\x8D\x03\x02\x02\x02\x8D\x94" +
		"\x03\x02\x02\x02\x8E\x90\x070\x02\x02\x8F\x91\x05;\x1E\x02\x90\x8F\x03" +
		"\x02\x02\x02\x91\x92\x03\x02\x02\x02\x92\x90\x03\x02\x02\x02\x92\x93\x03" +
		"\x02\x02\x02\x93\x95\x03\x02\x02\x02\x94\x8E\x03\x02\x02\x02\x94\x95\x03" +
		"\x02\x02\x02\x95>\x03\x02\x02\x02\x96\x97\t\x04\x02\x02\x97\x98\x03\x02" +
		"\x02\x02\x98\x99\b \x02\x02\x99@\x03\x02\x02\x02\x9A\x9D\x059\x1D\x02" +
		"\x9B\x9D\x07a\x02\x02\x9C\x9A\x03\x02\x02\x02\x9C\x9B\x03\x02\x02\x02" +
		"\x9D\xA3\x03\x02\x02\x02\x9E\xA2\x059\x1D\x02\x9F\xA2\x05;\x1E\x02\xA0" +
		"\xA2\t\x05\x02\x02\xA1\x9E\x03\x02\x02\x02\xA1\x9F\x03\x02\x02\x02\xA1" +
		"\xA0\x03\x02\x02\x02\xA2\xA5\x03\x02\x02\x02\xA3\xA1\x03\x02\x02\x02\xA3" +
		"\xA4\x03\x02\x02\x02\xA4B\x03\x02\x02\x02\xA5\xA3\x03\x02\x02\x02\xA6" +
		"\xA8\x07\x0F\x02\x02\xA7\xA6\x03\x02\x02\x02\xA7\xA8\x03\x02\x02\x02\xA8" +
		"\xA9\x03\x02\x02\x02\xA9\xAA\x07\f\x02\x02\xAA\xAB\x03\x02\x02\x02\xAB" +
		"\xAC\b\"\x02\x02\xACD\x03\x02\x02\x02\xAD\xB1\x07)\x02\x02\xAE\xB0\n\x06" +
		"\x02\x02\xAF\xAE\x03\x02\x02\x02\xB0\xB3\x03\x02\x02\x02\xB1\xAF\x03\x02" +
		"\x02\x02\xB1\xB2\x03\x02\x02\x02\xB2\xB4\x03\x02\x02\x02\xB3\xB1\x03\x02" +
		"\x02\x02\xB4\xBE\x07)\x02\x02\xB5\xB9\x07$\x02\x02\xB6\xB8\n\x07\x02\x02" +
		"\xB7\xB6\x03\x02\x02\x02\xB8\xBB\x03\x02\x02\x02\xB9\xB7\x03\x02\x02\x02" +
		"\xB9\xBA\x03\x02\x02\x02\xBA\xBC\x03\x02\x02\x02\xBB\xB9\x03\x02\x02\x02" +
		"\xBC\xBE\x07$\x02\x02\xBD\xAD\x03\x02\x02\x02\xBD\xB5\x03\x02\x02\x02" +
		"\xBEF\x03\x02\x02\x02\r\x02\x8C\x92\x94\x9C\xA1\xA3\xA7\xB1\xB9\xBD\x03" +
		"\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ExpressionLexer.__ATN) {
			ExpressionLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ExpressionLexer._serializedATN));
		}

		return ExpressionLexer.__ATN;
	}

}

