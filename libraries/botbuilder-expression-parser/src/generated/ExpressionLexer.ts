// Generated from ../Expression.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ExpressionLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly NUMBER = 29;
	public static readonly WHITESPACE = 30;
	public static readonly IDENTIFIER = 31;
	public static readonly NEWLINE = 32;
	public static readonly STRING = 33;
	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "LETTER", "DIGIT", "NUMBER", "WHITESPACE", 
		"IDENTIFIER", "NEWLINE", "STRING",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'!'", "'-'", "'+'", "'^'", "'*'", "'/'", "'%'", "'=='", "'!='", 
		"'<>'", "'&'", "'<'", "'<='", "'>'", "'>='", "'&&'", "'||'", "'('", "')'", 
		"'#'", "'@'", "'@@'", "'$'", "'~'", "'.'", "'['", "']'", "','",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "NUMBER", "WHITESPACE", "IDENTIFIER", "NEWLINE", "STRING",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ExpressionLexer._LITERAL_NAMES, ExpressionLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ExpressionLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ExpressionLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Expression.g4"; }

	// @Override
	public get ruleNames(): string[] { return ExpressionLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ExpressionLexer._serializedATN; }

	// @Override
	public get modeNames(): string[] { return ExpressionLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02#\xC3\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
		"#\t#\x04$\t$\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\t\x03" +
		"\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E" +
		"\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11" +
		"\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19" +
		"\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E" +
		"\x03\x1E\x03\x1F\x03\x1F\x03 \x06 \x8F\n \r \x0E \x90\x03 \x03 \x06 \x95" +
		"\n \r \x0E \x96\x05 \x99\n \x03!\x03!\x03!\x03!\x03\"\x03\"\x05\"\xA1" +
		"\n\"\x03\"\x03\"\x03\"\x07\"\xA6\n\"\f\"\x0E\"\xA9\v\"\x03#\x05#\xAC\n" +
		"#\x03#\x03#\x03#\x03#\x03$\x03$\x07$\xB4\n$\f$\x0E$\xB7\v$\x03$\x03$\x03" +
		"$\x07$\xBC\n$\f$\x0E$\xBF\v$\x03$\x05$\xC2\n$\x02\x02\x02%\x03\x02\x03" +
		"\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02" +
		"\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F" +
		"\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18" +
		"/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x02=\x02\x02" +
		"?\x02\x1FA\x02 C\x02!E\x02\"G\x02#\x03\x02\b\x04\x02C\\c|\x03\x022;\x06" +
		"\x02\v\v\"\"\xA2\xA2\uFF01\uFF01\x04\x02//aa\x03\x02))\x03\x02$$\xCB\x02" +
		"\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02" +
		"\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F" +
		"\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15" +
		"\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B" +
		"\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!" +
		"\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02" +
		"\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02" +
		"\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03" +
		"\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02?\x03\x02\x02" +
		"\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02" +
		"G\x03\x02\x02\x02\x03I\x03\x02\x02\x02\x05K\x03\x02\x02\x02\x07M\x03\x02" +
		"\x02\x02\tO\x03\x02\x02\x02\vQ\x03\x02\x02\x02\rS\x03\x02\x02\x02\x0F" +
		"U\x03\x02\x02\x02\x11W\x03\x02\x02\x02\x13Z\x03\x02\x02\x02\x15]\x03\x02" +
		"\x02\x02\x17`\x03\x02\x02\x02\x19b\x03\x02\x02\x02\x1Bd\x03\x02\x02\x02" +
		"\x1Dg\x03\x02\x02\x02\x1Fi\x03\x02\x02\x02!l\x03\x02\x02\x02#o\x03\x02" +
		"\x02\x02%r\x03\x02\x02\x02\'t\x03\x02\x02\x02)v\x03\x02\x02\x02+x\x03" +
		"\x02\x02\x02-z\x03\x02\x02\x02/}\x03\x02\x02\x021\x7F\x03\x02\x02\x02" +
		"3\x81\x03\x02\x02\x025\x83\x03\x02\x02\x027\x85\x03\x02\x02\x029\x87\x03" +
		"\x02\x02\x02;\x89\x03\x02\x02\x02=\x8B\x03\x02\x02\x02?\x8E\x03\x02\x02" +
		"\x02A\x9A\x03\x02\x02\x02C\xA0\x03\x02\x02\x02E\xAB\x03\x02\x02\x02G\xC1" +
		"\x03\x02\x02\x02IJ\x07#\x02\x02J\x04\x03\x02\x02\x02KL\x07/\x02\x02L\x06" +
		"\x03\x02\x02\x02MN\x07-\x02\x02N\b\x03\x02\x02\x02OP\x07`\x02\x02P\n\x03" +
		"\x02\x02\x02QR\x07,\x02\x02R\f\x03\x02\x02\x02ST\x071\x02\x02T\x0E\x03" +
		"\x02\x02\x02UV\x07\'\x02\x02V\x10\x03\x02\x02\x02WX\x07?\x02\x02XY\x07" +
		"?\x02\x02Y\x12\x03\x02\x02\x02Z[\x07#\x02\x02[\\\x07?\x02\x02\\\x14\x03" +
		"\x02\x02\x02]^\x07>\x02\x02^_\x07@\x02\x02_\x16\x03\x02\x02\x02`a\x07" +
		"(\x02\x02a\x18\x03\x02\x02\x02bc\x07>\x02\x02c\x1A\x03\x02\x02\x02de\x07" +
		">\x02\x02ef\x07?\x02\x02f\x1C\x03\x02\x02\x02gh\x07@\x02\x02h\x1E\x03" +
		"\x02\x02\x02ij\x07@\x02\x02jk\x07?\x02\x02k \x03\x02\x02\x02lm\x07(\x02" +
		"\x02mn\x07(\x02\x02n\"\x03\x02\x02\x02op\x07~\x02\x02pq\x07~\x02\x02q" +
		"$\x03\x02\x02\x02rs\x07*\x02\x02s&\x03\x02\x02\x02tu\x07+\x02\x02u(\x03" +
		"\x02\x02\x02vw\x07%\x02\x02w*\x03\x02\x02\x02xy\x07B\x02\x02y,\x03\x02" +
		"\x02\x02z{\x07B\x02\x02{|\x07B\x02\x02|.\x03\x02\x02\x02}~\x07&\x02\x02" +
		"~0\x03\x02\x02\x02\x7F\x80\x07\x80\x02\x02\x802\x03\x02\x02\x02\x81\x82" +
		"\x070\x02\x02\x824\x03\x02\x02\x02\x83\x84\x07]\x02\x02\x846\x03\x02\x02" +
		"\x02\x85\x86\x07_\x02\x02\x868\x03\x02\x02\x02\x87\x88\x07.\x02\x02\x88" +
		":\x03\x02\x02\x02\x89\x8A\t\x02\x02\x02\x8A<\x03\x02\x02\x02\x8B\x8C\t" +
		"\x03\x02\x02\x8C>\x03\x02\x02\x02\x8D\x8F\x05=\x1F\x02\x8E\x8D\x03\x02" +
		"\x02\x02\x8F\x90\x03\x02\x02\x02\x90\x8E\x03\x02\x02\x02\x90\x91\x03\x02" +
		"\x02\x02\x91\x98\x03\x02\x02\x02\x92\x94\x070\x02\x02\x93\x95\x05=\x1F" +
		"\x02\x94\x93\x03\x02\x02\x02\x95\x96\x03\x02\x02\x02\x96\x94\x03\x02\x02" +
		"\x02\x96\x97\x03\x02\x02\x02\x97\x99\x03\x02\x02\x02\x98\x92\x03\x02\x02" +
		"\x02\x98\x99\x03\x02\x02\x02\x99@\x03\x02\x02\x02\x9A\x9B\t\x04\x02\x02" +
		"\x9B\x9C\x03\x02\x02\x02\x9C\x9D\b!\x02\x02\x9DB\x03\x02\x02\x02\x9E\xA1" +
		"\x05;\x1E\x02\x9F\xA1\x07a\x02\x02\xA0\x9E\x03\x02\x02\x02\xA0\x9F\x03" +
		"\x02\x02\x02\xA1\xA7\x03\x02\x02\x02\xA2\xA6\x05;\x1E\x02\xA3\xA6\x05" +
		"=\x1F\x02\xA4\xA6\t\x05\x02\x02\xA5\xA2\x03\x02\x02\x02\xA5\xA3\x03\x02" +
		"\x02\x02\xA5\xA4\x03\x02\x02\x02\xA6\xA9\x03\x02\x02\x02\xA7\xA5\x03\x02" +
		"\x02\x02\xA7\xA8\x03\x02\x02\x02\xA8D\x03\x02\x02\x02\xA9\xA7\x03\x02" +
		"\x02\x02\xAA\xAC\x07\x0F\x02\x02\xAB\xAA\x03\x02\x02\x02\xAB\xAC\x03\x02" +
		"\x02\x02\xAC\xAD\x03\x02\x02\x02\xAD\xAE\x07\f\x02\x02\xAE\xAF\x03\x02" +
		"\x02\x02\xAF\xB0\b#\x02\x02\xB0F\x03\x02\x02\x02\xB1\xB5\x07)\x02\x02" +
		"\xB2\xB4\n\x06\x02\x02\xB3\xB2\x03\x02\x02\x02\xB4\xB7\x03\x02\x02\x02" +
		"\xB5\xB3\x03\x02\x02\x02\xB5\xB6\x03\x02\x02\x02\xB6\xB8\x03\x02\x02\x02" +
		"\xB7\xB5\x03\x02\x02\x02\xB8\xC2\x07)\x02\x02\xB9\xBD\x07$\x02\x02\xBA" +
		"\xBC\n\x07\x02\x02\xBB\xBA\x03\x02\x02\x02\xBC\xBF\x03\x02\x02\x02\xBD" +
		"\xBB\x03\x02\x02\x02\xBD\xBE\x03\x02\x02\x02\xBE\xC0\x03\x02\x02\x02\xBF" +
		"\xBD\x03\x02\x02\x02\xC0\xC2\x07$\x02\x02\xC1\xB1\x03\x02\x02\x02\xC1" +
		"\xB9\x03\x02\x02\x02\xC2H\x03\x02\x02\x02\r\x02\x90\x96\x98\xA0\xA5\xA7" +
		"\xAB\xB5\xBD\xC1\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ExpressionLexer.__ATN) {
			ExpressionLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ExpressionLexer._serializedATN));
		}

		return ExpressionLexer.__ATN;
	}

}

